//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40818.0
// 
namespace Dropthings.DiggSilverlight.DropthingsWidgetService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dropthings.omaralzabir.com", ConfigurationName="DropthingsWidgetService.WidgetService")]
    public interface WidgetService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dropthings.omaralzabir.com/WidgetService/AddWidgetInstance", ReplyAction="http://dropthings.omaralzabir.com/WidgetService/AddWidgetInstanceResponse")]
        System.IAsyncResult BeginAddWidgetInstance(int widgetId, int toZone, int toRow, System.AsyncCallback callback, object asyncState);
        
        void EndAddWidgetInstance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dropthings.omaralzabir.com/WidgetService/ChangeWidgetTitle", ReplyAction="http://dropthings.omaralzabir.com/WidgetService/ChangeWidgetTitleResponse")]
        System.IAsyncResult BeginChangeWidgetTitle(int widgetInstanceId, string newTitle, System.AsyncCallback callback, object asyncState);
        
        void EndChangeWidgetTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dropthings.omaralzabir.com/WidgetService/CollaspeWidgetInstance", ReplyAction="http://dropthings.omaralzabir.com/WidgetService/CollaspeWidgetInstanceResponse")]
        System.IAsyncResult BeginCollaspeWidgetInstance(int widgetInstanceId, System.AsyncCallback callback, object asyncState);
        
        void EndCollaspeWidgetInstance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dropthings.omaralzabir.com/WidgetService/DeleteWidgetInstance", ReplyAction="http://dropthings.omaralzabir.com/WidgetService/DeleteWidgetInstanceResponse")]
        System.IAsyncResult BeginDeleteWidgetInstance(int widgetInstanceId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteWidgetInstance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dropthings.omaralzabir.com/WidgetService/ExpandWidgetInstance", ReplyAction="http://dropthings.omaralzabir.com/WidgetService/ExpandWidgetInstanceResponse")]
        System.IAsyncResult BeginExpandWidgetInstance(int widgetInstanceId, System.AsyncCallback callback, object asyncState);
        
        void EndExpandWidgetInstance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dropthings.omaralzabir.com/WidgetService/GetWidgetState", ReplyAction="http://dropthings.omaralzabir.com/WidgetService/GetWidgetStateResponse")]
        System.IAsyncResult BeginGetWidgetState(int widgetInstanceId, System.AsyncCallback callback, object asyncState);
        
        string EndGetWidgetState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dropthings.omaralzabir.com/WidgetService/MaximizeWidgetInstance", ReplyAction="http://dropthings.omaralzabir.com/WidgetService/MaximizeWidgetInstanceResponse")]
        System.IAsyncResult BeginMaximizeWidgetInstance(int widgetInstanceId, System.AsyncCallback callback, object asyncState);
        
        void EndMaximizeWidgetInstance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dropthings.omaralzabir.com/WidgetService/MoveWidgetInstance", ReplyAction="http://dropthings.omaralzabir.com/WidgetService/MoveWidgetInstanceResponse")]
        System.IAsyncResult BeginMoveWidgetInstance(int instanceId, int toZoneId, int toRow, System.AsyncCallback callback, object asyncState);
        
        void EndMoveWidgetInstance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dropthings.omaralzabir.com/WidgetService/ResizeWidgetInstance", ReplyAction="http://dropthings.omaralzabir.com/WidgetService/ResizeWidgetInstanceResponse")]
        System.IAsyncResult BeginResizeWidgetInstance(int widgetInstanceId, int width, int height, System.AsyncCallback callback, object asyncState);
        
        void EndResizeWidgetInstance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dropthings.omaralzabir.com/WidgetService/RestoreWidgetInstance", ReplyAction="http://dropthings.omaralzabir.com/WidgetService/RestoreWidgetInstanceResponse")]
        System.IAsyncResult BeginRestoreWidgetInstance(int widgetInstanceId, System.AsyncCallback callback, object asyncState);
        
        void EndRestoreWidgetInstance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dropthings.omaralzabir.com/WidgetService/SaveWidgetState", ReplyAction="http://dropthings.omaralzabir.com/WidgetService/SaveWidgetStateResponse")]
        System.IAsyncResult BeginSaveWidgetState(int widgetInstanceId, string state, System.AsyncCallback callback, object asyncState);
        
        void EndSaveWidgetState(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WidgetServiceChannel : Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWidgetStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWidgetStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WidgetServiceClient : System.ServiceModel.ClientBase<Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService>, Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService {
        
        private BeginOperationDelegate onBeginAddWidgetInstanceDelegate;
        
        private EndOperationDelegate onEndAddWidgetInstanceDelegate;
        
        private System.Threading.SendOrPostCallback onAddWidgetInstanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeWidgetTitleDelegate;
        
        private EndOperationDelegate onEndChangeWidgetTitleDelegate;
        
        private System.Threading.SendOrPostCallback onChangeWidgetTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginCollaspeWidgetInstanceDelegate;
        
        private EndOperationDelegate onEndCollaspeWidgetInstanceDelegate;
        
        private System.Threading.SendOrPostCallback onCollaspeWidgetInstanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteWidgetInstanceDelegate;
        
        private EndOperationDelegate onEndDeleteWidgetInstanceDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteWidgetInstanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginExpandWidgetInstanceDelegate;
        
        private EndOperationDelegate onEndExpandWidgetInstanceDelegate;
        
        private System.Threading.SendOrPostCallback onExpandWidgetInstanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWidgetStateDelegate;
        
        private EndOperationDelegate onEndGetWidgetStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetWidgetStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginMaximizeWidgetInstanceDelegate;
        
        private EndOperationDelegate onEndMaximizeWidgetInstanceDelegate;
        
        private System.Threading.SendOrPostCallback onMaximizeWidgetInstanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoveWidgetInstanceDelegate;
        
        private EndOperationDelegate onEndMoveWidgetInstanceDelegate;
        
        private System.Threading.SendOrPostCallback onMoveWidgetInstanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginResizeWidgetInstanceDelegate;
        
        private EndOperationDelegate onEndResizeWidgetInstanceDelegate;
        
        private System.Threading.SendOrPostCallback onResizeWidgetInstanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginRestoreWidgetInstanceDelegate;
        
        private EndOperationDelegate onEndRestoreWidgetInstanceDelegate;
        
        private System.Threading.SendOrPostCallback onRestoreWidgetInstanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveWidgetStateDelegate;
        
        private EndOperationDelegate onEndSaveWidgetStateDelegate;
        
        private System.Threading.SendOrPostCallback onSaveWidgetStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WidgetServiceClient() {
        }
        
        public WidgetServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WidgetServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WidgetServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WidgetServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddWidgetInstanceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ChangeWidgetTitleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CollaspeWidgetInstanceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteWidgetInstanceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ExpandWidgetInstanceCompleted;
        
        public event System.EventHandler<GetWidgetStateCompletedEventArgs> GetWidgetStateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MaximizeWidgetInstanceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MoveWidgetInstanceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ResizeWidgetInstanceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RestoreWidgetInstanceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveWidgetStateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.BeginAddWidgetInstance(int widgetId, int toZone, int toRow, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddWidgetInstance(widgetId, toZone, toRow, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.EndAddWidgetInstance(System.IAsyncResult result) {
            base.Channel.EndAddWidgetInstance(result);
        }
        
        private System.IAsyncResult OnBeginAddWidgetInstance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int widgetId = ((int)(inValues[0]));
            int toZone = ((int)(inValues[1]));
            int toRow = ((int)(inValues[2]));
            return ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).BeginAddWidgetInstance(widgetId, toZone, toRow, callback, asyncState);
        }
        
        private object[] OnEndAddWidgetInstance(System.IAsyncResult result) {
            ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).EndAddWidgetInstance(result);
            return null;
        }
        
        private void OnAddWidgetInstanceCompleted(object state) {
            if ((this.AddWidgetInstanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddWidgetInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddWidgetInstanceAsync(int widgetId, int toZone, int toRow) {
            this.AddWidgetInstanceAsync(widgetId, toZone, toRow, null);
        }
        
        public void AddWidgetInstanceAsync(int widgetId, int toZone, int toRow, object userState) {
            if ((this.onBeginAddWidgetInstanceDelegate == null)) {
                this.onBeginAddWidgetInstanceDelegate = new BeginOperationDelegate(this.OnBeginAddWidgetInstance);
            }
            if ((this.onEndAddWidgetInstanceDelegate == null)) {
                this.onEndAddWidgetInstanceDelegate = new EndOperationDelegate(this.OnEndAddWidgetInstance);
            }
            if ((this.onAddWidgetInstanceCompletedDelegate == null)) {
                this.onAddWidgetInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddWidgetInstanceCompleted);
            }
            base.InvokeAsync(this.onBeginAddWidgetInstanceDelegate, new object[] {
                        widgetId,
                        toZone,
                        toRow}, this.onEndAddWidgetInstanceDelegate, this.onAddWidgetInstanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.BeginChangeWidgetTitle(int widgetInstanceId, string newTitle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeWidgetTitle(widgetInstanceId, newTitle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.EndChangeWidgetTitle(System.IAsyncResult result) {
            base.Channel.EndChangeWidgetTitle(result);
        }
        
        private System.IAsyncResult OnBeginChangeWidgetTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int widgetInstanceId = ((int)(inValues[0]));
            string newTitle = ((string)(inValues[1]));
            return ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).BeginChangeWidgetTitle(widgetInstanceId, newTitle, callback, asyncState);
        }
        
        private object[] OnEndChangeWidgetTitle(System.IAsyncResult result) {
            ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).EndChangeWidgetTitle(result);
            return null;
        }
        
        private void OnChangeWidgetTitleCompleted(object state) {
            if ((this.ChangeWidgetTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeWidgetTitleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeWidgetTitleAsync(int widgetInstanceId, string newTitle) {
            this.ChangeWidgetTitleAsync(widgetInstanceId, newTitle, null);
        }
        
        public void ChangeWidgetTitleAsync(int widgetInstanceId, string newTitle, object userState) {
            if ((this.onBeginChangeWidgetTitleDelegate == null)) {
                this.onBeginChangeWidgetTitleDelegate = new BeginOperationDelegate(this.OnBeginChangeWidgetTitle);
            }
            if ((this.onEndChangeWidgetTitleDelegate == null)) {
                this.onEndChangeWidgetTitleDelegate = new EndOperationDelegate(this.OnEndChangeWidgetTitle);
            }
            if ((this.onChangeWidgetTitleCompletedDelegate == null)) {
                this.onChangeWidgetTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeWidgetTitleCompleted);
            }
            base.InvokeAsync(this.onBeginChangeWidgetTitleDelegate, new object[] {
                        widgetInstanceId,
                        newTitle}, this.onEndChangeWidgetTitleDelegate, this.onChangeWidgetTitleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.BeginCollaspeWidgetInstance(int widgetInstanceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCollaspeWidgetInstance(widgetInstanceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.EndCollaspeWidgetInstance(System.IAsyncResult result) {
            base.Channel.EndCollaspeWidgetInstance(result);
        }
        
        private System.IAsyncResult OnBeginCollaspeWidgetInstance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int widgetInstanceId = ((int)(inValues[0]));
            return ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).BeginCollaspeWidgetInstance(widgetInstanceId, callback, asyncState);
        }
        
        private object[] OnEndCollaspeWidgetInstance(System.IAsyncResult result) {
            ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).EndCollaspeWidgetInstance(result);
            return null;
        }
        
        private void OnCollaspeWidgetInstanceCompleted(object state) {
            if ((this.CollaspeWidgetInstanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CollaspeWidgetInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CollaspeWidgetInstanceAsync(int widgetInstanceId) {
            this.CollaspeWidgetInstanceAsync(widgetInstanceId, null);
        }
        
        public void CollaspeWidgetInstanceAsync(int widgetInstanceId, object userState) {
            if ((this.onBeginCollaspeWidgetInstanceDelegate == null)) {
                this.onBeginCollaspeWidgetInstanceDelegate = new BeginOperationDelegate(this.OnBeginCollaspeWidgetInstance);
            }
            if ((this.onEndCollaspeWidgetInstanceDelegate == null)) {
                this.onEndCollaspeWidgetInstanceDelegate = new EndOperationDelegate(this.OnEndCollaspeWidgetInstance);
            }
            if ((this.onCollaspeWidgetInstanceCompletedDelegate == null)) {
                this.onCollaspeWidgetInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCollaspeWidgetInstanceCompleted);
            }
            base.InvokeAsync(this.onBeginCollaspeWidgetInstanceDelegate, new object[] {
                        widgetInstanceId}, this.onEndCollaspeWidgetInstanceDelegate, this.onCollaspeWidgetInstanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.BeginDeleteWidgetInstance(int widgetInstanceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteWidgetInstance(widgetInstanceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.EndDeleteWidgetInstance(System.IAsyncResult result) {
            base.Channel.EndDeleteWidgetInstance(result);
        }
        
        private System.IAsyncResult OnBeginDeleteWidgetInstance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int widgetInstanceId = ((int)(inValues[0]));
            return ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).BeginDeleteWidgetInstance(widgetInstanceId, callback, asyncState);
        }
        
        private object[] OnEndDeleteWidgetInstance(System.IAsyncResult result) {
            ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).EndDeleteWidgetInstance(result);
            return null;
        }
        
        private void OnDeleteWidgetInstanceCompleted(object state) {
            if ((this.DeleteWidgetInstanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteWidgetInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteWidgetInstanceAsync(int widgetInstanceId) {
            this.DeleteWidgetInstanceAsync(widgetInstanceId, null);
        }
        
        public void DeleteWidgetInstanceAsync(int widgetInstanceId, object userState) {
            if ((this.onBeginDeleteWidgetInstanceDelegate == null)) {
                this.onBeginDeleteWidgetInstanceDelegate = new BeginOperationDelegate(this.OnBeginDeleteWidgetInstance);
            }
            if ((this.onEndDeleteWidgetInstanceDelegate == null)) {
                this.onEndDeleteWidgetInstanceDelegate = new EndOperationDelegate(this.OnEndDeleteWidgetInstance);
            }
            if ((this.onDeleteWidgetInstanceCompletedDelegate == null)) {
                this.onDeleteWidgetInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteWidgetInstanceCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteWidgetInstanceDelegate, new object[] {
                        widgetInstanceId}, this.onEndDeleteWidgetInstanceDelegate, this.onDeleteWidgetInstanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.BeginExpandWidgetInstance(int widgetInstanceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExpandWidgetInstance(widgetInstanceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.EndExpandWidgetInstance(System.IAsyncResult result) {
            base.Channel.EndExpandWidgetInstance(result);
        }
        
        private System.IAsyncResult OnBeginExpandWidgetInstance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int widgetInstanceId = ((int)(inValues[0]));
            return ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).BeginExpandWidgetInstance(widgetInstanceId, callback, asyncState);
        }
        
        private object[] OnEndExpandWidgetInstance(System.IAsyncResult result) {
            ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).EndExpandWidgetInstance(result);
            return null;
        }
        
        private void OnExpandWidgetInstanceCompleted(object state) {
            if ((this.ExpandWidgetInstanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExpandWidgetInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExpandWidgetInstanceAsync(int widgetInstanceId) {
            this.ExpandWidgetInstanceAsync(widgetInstanceId, null);
        }
        
        public void ExpandWidgetInstanceAsync(int widgetInstanceId, object userState) {
            if ((this.onBeginExpandWidgetInstanceDelegate == null)) {
                this.onBeginExpandWidgetInstanceDelegate = new BeginOperationDelegate(this.OnBeginExpandWidgetInstance);
            }
            if ((this.onEndExpandWidgetInstanceDelegate == null)) {
                this.onEndExpandWidgetInstanceDelegate = new EndOperationDelegate(this.OnEndExpandWidgetInstance);
            }
            if ((this.onExpandWidgetInstanceCompletedDelegate == null)) {
                this.onExpandWidgetInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExpandWidgetInstanceCompleted);
            }
            base.InvokeAsync(this.onBeginExpandWidgetInstanceDelegate, new object[] {
                        widgetInstanceId}, this.onEndExpandWidgetInstanceDelegate, this.onExpandWidgetInstanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.BeginGetWidgetState(int widgetInstanceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWidgetState(widgetInstanceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.EndGetWidgetState(System.IAsyncResult result) {
            return base.Channel.EndGetWidgetState(result);
        }
        
        private System.IAsyncResult OnBeginGetWidgetState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int widgetInstanceId = ((int)(inValues[0]));
            return ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).BeginGetWidgetState(widgetInstanceId, callback, asyncState);
        }
        
        private object[] OnEndGetWidgetState(System.IAsyncResult result) {
            string retVal = ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).EndGetWidgetState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWidgetStateCompleted(object state) {
            if ((this.GetWidgetStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWidgetStateCompleted(this, new GetWidgetStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWidgetStateAsync(int widgetInstanceId) {
            this.GetWidgetStateAsync(widgetInstanceId, null);
        }
        
        public void GetWidgetStateAsync(int widgetInstanceId, object userState) {
            if ((this.onBeginGetWidgetStateDelegate == null)) {
                this.onBeginGetWidgetStateDelegate = new BeginOperationDelegate(this.OnBeginGetWidgetState);
            }
            if ((this.onEndGetWidgetStateDelegate == null)) {
                this.onEndGetWidgetStateDelegate = new EndOperationDelegate(this.OnEndGetWidgetState);
            }
            if ((this.onGetWidgetStateCompletedDelegate == null)) {
                this.onGetWidgetStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWidgetStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetWidgetStateDelegate, new object[] {
                        widgetInstanceId}, this.onEndGetWidgetStateDelegate, this.onGetWidgetStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.BeginMaximizeWidgetInstance(int widgetInstanceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMaximizeWidgetInstance(widgetInstanceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.EndMaximizeWidgetInstance(System.IAsyncResult result) {
            base.Channel.EndMaximizeWidgetInstance(result);
        }
        
        private System.IAsyncResult OnBeginMaximizeWidgetInstance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int widgetInstanceId = ((int)(inValues[0]));
            return ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).BeginMaximizeWidgetInstance(widgetInstanceId, callback, asyncState);
        }
        
        private object[] OnEndMaximizeWidgetInstance(System.IAsyncResult result) {
            ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).EndMaximizeWidgetInstance(result);
            return null;
        }
        
        private void OnMaximizeWidgetInstanceCompleted(object state) {
            if ((this.MaximizeWidgetInstanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MaximizeWidgetInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MaximizeWidgetInstanceAsync(int widgetInstanceId) {
            this.MaximizeWidgetInstanceAsync(widgetInstanceId, null);
        }
        
        public void MaximizeWidgetInstanceAsync(int widgetInstanceId, object userState) {
            if ((this.onBeginMaximizeWidgetInstanceDelegate == null)) {
                this.onBeginMaximizeWidgetInstanceDelegate = new BeginOperationDelegate(this.OnBeginMaximizeWidgetInstance);
            }
            if ((this.onEndMaximizeWidgetInstanceDelegate == null)) {
                this.onEndMaximizeWidgetInstanceDelegate = new EndOperationDelegate(this.OnEndMaximizeWidgetInstance);
            }
            if ((this.onMaximizeWidgetInstanceCompletedDelegate == null)) {
                this.onMaximizeWidgetInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMaximizeWidgetInstanceCompleted);
            }
            base.InvokeAsync(this.onBeginMaximizeWidgetInstanceDelegate, new object[] {
                        widgetInstanceId}, this.onEndMaximizeWidgetInstanceDelegate, this.onMaximizeWidgetInstanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.BeginMoveWidgetInstance(int instanceId, int toZoneId, int toRow, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMoveWidgetInstance(instanceId, toZoneId, toRow, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.EndMoveWidgetInstance(System.IAsyncResult result) {
            base.Channel.EndMoveWidgetInstance(result);
        }
        
        private System.IAsyncResult OnBeginMoveWidgetInstance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int instanceId = ((int)(inValues[0]));
            int toZoneId = ((int)(inValues[1]));
            int toRow = ((int)(inValues[2]));
            return ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).BeginMoveWidgetInstance(instanceId, toZoneId, toRow, callback, asyncState);
        }
        
        private object[] OnEndMoveWidgetInstance(System.IAsyncResult result) {
            ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).EndMoveWidgetInstance(result);
            return null;
        }
        
        private void OnMoveWidgetInstanceCompleted(object state) {
            if ((this.MoveWidgetInstanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveWidgetInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MoveWidgetInstanceAsync(int instanceId, int toZoneId, int toRow) {
            this.MoveWidgetInstanceAsync(instanceId, toZoneId, toRow, null);
        }
        
        public void MoveWidgetInstanceAsync(int instanceId, int toZoneId, int toRow, object userState) {
            if ((this.onBeginMoveWidgetInstanceDelegate == null)) {
                this.onBeginMoveWidgetInstanceDelegate = new BeginOperationDelegate(this.OnBeginMoveWidgetInstance);
            }
            if ((this.onEndMoveWidgetInstanceDelegate == null)) {
                this.onEndMoveWidgetInstanceDelegate = new EndOperationDelegate(this.OnEndMoveWidgetInstance);
            }
            if ((this.onMoveWidgetInstanceCompletedDelegate == null)) {
                this.onMoveWidgetInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveWidgetInstanceCompleted);
            }
            base.InvokeAsync(this.onBeginMoveWidgetInstanceDelegate, new object[] {
                        instanceId,
                        toZoneId,
                        toRow}, this.onEndMoveWidgetInstanceDelegate, this.onMoveWidgetInstanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.BeginResizeWidgetInstance(int widgetInstanceId, int width, int height, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResizeWidgetInstance(widgetInstanceId, width, height, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.EndResizeWidgetInstance(System.IAsyncResult result) {
            base.Channel.EndResizeWidgetInstance(result);
        }
        
        private System.IAsyncResult OnBeginResizeWidgetInstance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int widgetInstanceId = ((int)(inValues[0]));
            int width = ((int)(inValues[1]));
            int height = ((int)(inValues[2]));
            return ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).BeginResizeWidgetInstance(widgetInstanceId, width, height, callback, asyncState);
        }
        
        private object[] OnEndResizeWidgetInstance(System.IAsyncResult result) {
            ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).EndResizeWidgetInstance(result);
            return null;
        }
        
        private void OnResizeWidgetInstanceCompleted(object state) {
            if ((this.ResizeWidgetInstanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResizeWidgetInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResizeWidgetInstanceAsync(int widgetInstanceId, int width, int height) {
            this.ResizeWidgetInstanceAsync(widgetInstanceId, width, height, null);
        }
        
        public void ResizeWidgetInstanceAsync(int widgetInstanceId, int width, int height, object userState) {
            if ((this.onBeginResizeWidgetInstanceDelegate == null)) {
                this.onBeginResizeWidgetInstanceDelegate = new BeginOperationDelegate(this.OnBeginResizeWidgetInstance);
            }
            if ((this.onEndResizeWidgetInstanceDelegate == null)) {
                this.onEndResizeWidgetInstanceDelegate = new EndOperationDelegate(this.OnEndResizeWidgetInstance);
            }
            if ((this.onResizeWidgetInstanceCompletedDelegate == null)) {
                this.onResizeWidgetInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResizeWidgetInstanceCompleted);
            }
            base.InvokeAsync(this.onBeginResizeWidgetInstanceDelegate, new object[] {
                        widgetInstanceId,
                        width,
                        height}, this.onEndResizeWidgetInstanceDelegate, this.onResizeWidgetInstanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.BeginRestoreWidgetInstance(int widgetInstanceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRestoreWidgetInstance(widgetInstanceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.EndRestoreWidgetInstance(System.IAsyncResult result) {
            base.Channel.EndRestoreWidgetInstance(result);
        }
        
        private System.IAsyncResult OnBeginRestoreWidgetInstance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int widgetInstanceId = ((int)(inValues[0]));
            return ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).BeginRestoreWidgetInstance(widgetInstanceId, callback, asyncState);
        }
        
        private object[] OnEndRestoreWidgetInstance(System.IAsyncResult result) {
            ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).EndRestoreWidgetInstance(result);
            return null;
        }
        
        private void OnRestoreWidgetInstanceCompleted(object state) {
            if ((this.RestoreWidgetInstanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RestoreWidgetInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RestoreWidgetInstanceAsync(int widgetInstanceId) {
            this.RestoreWidgetInstanceAsync(widgetInstanceId, null);
        }
        
        public void RestoreWidgetInstanceAsync(int widgetInstanceId, object userState) {
            if ((this.onBeginRestoreWidgetInstanceDelegate == null)) {
                this.onBeginRestoreWidgetInstanceDelegate = new BeginOperationDelegate(this.OnBeginRestoreWidgetInstance);
            }
            if ((this.onEndRestoreWidgetInstanceDelegate == null)) {
                this.onEndRestoreWidgetInstanceDelegate = new EndOperationDelegate(this.OnEndRestoreWidgetInstance);
            }
            if ((this.onRestoreWidgetInstanceCompletedDelegate == null)) {
                this.onRestoreWidgetInstanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRestoreWidgetInstanceCompleted);
            }
            base.InvokeAsync(this.onBeginRestoreWidgetInstanceDelegate, new object[] {
                        widgetInstanceId}, this.onEndRestoreWidgetInstanceDelegate, this.onRestoreWidgetInstanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.BeginSaveWidgetState(int widgetInstanceId, string state, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveWidgetState(widgetInstanceId, state, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService.EndSaveWidgetState(System.IAsyncResult result) {
            base.Channel.EndSaveWidgetState(result);
        }
        
        private System.IAsyncResult OnBeginSaveWidgetState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int widgetInstanceId = ((int)(inValues[0]));
            string state = ((string)(inValues[1]));
            return ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).BeginSaveWidgetState(widgetInstanceId, state, callback, asyncState);
        }
        
        private object[] OnEndSaveWidgetState(System.IAsyncResult result) {
            ((Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService)(this)).EndSaveWidgetState(result);
            return null;
        }
        
        private void OnSaveWidgetStateCompleted(object state) {
            if ((this.SaveWidgetStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveWidgetStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveWidgetStateAsync(int widgetInstanceId, string state) {
            this.SaveWidgetStateAsync(widgetInstanceId, state, null);
        }
        
        public void SaveWidgetStateAsync(int widgetInstanceId, string state, object userState) {
            if ((this.onBeginSaveWidgetStateDelegate == null)) {
                this.onBeginSaveWidgetStateDelegate = new BeginOperationDelegate(this.OnBeginSaveWidgetState);
            }
            if ((this.onEndSaveWidgetStateDelegate == null)) {
                this.onEndSaveWidgetStateDelegate = new EndOperationDelegate(this.OnEndSaveWidgetState);
            }
            if ((this.onSaveWidgetStateCompletedDelegate == null)) {
                this.onSaveWidgetStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveWidgetStateCompleted);
            }
            base.InvokeAsync(this.onBeginSaveWidgetStateDelegate, new object[] {
                        widgetInstanceId,
                        state}, this.onEndSaveWidgetStateDelegate, this.onSaveWidgetStateCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService CreateChannel() {
            return new WidgetServiceClientChannel(this);
        }
        
        private class WidgetServiceClientChannel : ChannelBase<Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService>, Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService {
            
            public WidgetServiceClientChannel(System.ServiceModel.ClientBase<Dropthings.DiggSilverlight.DropthingsWidgetService.WidgetService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddWidgetInstance(int widgetId, int toZone, int toRow, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = widgetId;
                _args[1] = toZone;
                _args[2] = toRow;
                System.IAsyncResult _result = base.BeginInvoke("AddWidgetInstance", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddWidgetInstance(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddWidgetInstance", _args, result);
            }
            
            public System.IAsyncResult BeginChangeWidgetTitle(int widgetInstanceId, string newTitle, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = widgetInstanceId;
                _args[1] = newTitle;
                System.IAsyncResult _result = base.BeginInvoke("ChangeWidgetTitle", _args, callback, asyncState);
                return _result;
            }
            
            public void EndChangeWidgetTitle(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ChangeWidgetTitle", _args, result);
            }
            
            public System.IAsyncResult BeginCollaspeWidgetInstance(int widgetInstanceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = widgetInstanceId;
                System.IAsyncResult _result = base.BeginInvoke("CollaspeWidgetInstance", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCollaspeWidgetInstance(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CollaspeWidgetInstance", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteWidgetInstance(int widgetInstanceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = widgetInstanceId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteWidgetInstance", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteWidgetInstance(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteWidgetInstance", _args, result);
            }
            
            public System.IAsyncResult BeginExpandWidgetInstance(int widgetInstanceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = widgetInstanceId;
                System.IAsyncResult _result = base.BeginInvoke("ExpandWidgetInstance", _args, callback, asyncState);
                return _result;
            }
            
            public void EndExpandWidgetInstance(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ExpandWidgetInstance", _args, result);
            }
            
            public System.IAsyncResult BeginGetWidgetState(int widgetInstanceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = widgetInstanceId;
                System.IAsyncResult _result = base.BeginInvoke("GetWidgetState", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetWidgetState(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetWidgetState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMaximizeWidgetInstance(int widgetInstanceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = widgetInstanceId;
                System.IAsyncResult _result = base.BeginInvoke("MaximizeWidgetInstance", _args, callback, asyncState);
                return _result;
            }
            
            public void EndMaximizeWidgetInstance(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("MaximizeWidgetInstance", _args, result);
            }
            
            public System.IAsyncResult BeginMoveWidgetInstance(int instanceId, int toZoneId, int toRow, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = instanceId;
                _args[1] = toZoneId;
                _args[2] = toRow;
                System.IAsyncResult _result = base.BeginInvoke("MoveWidgetInstance", _args, callback, asyncState);
                return _result;
            }
            
            public void EndMoveWidgetInstance(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("MoveWidgetInstance", _args, result);
            }
            
            public System.IAsyncResult BeginResizeWidgetInstance(int widgetInstanceId, int width, int height, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = widgetInstanceId;
                _args[1] = width;
                _args[2] = height;
                System.IAsyncResult _result = base.BeginInvoke("ResizeWidgetInstance", _args, callback, asyncState);
                return _result;
            }
            
            public void EndResizeWidgetInstance(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ResizeWidgetInstance", _args, result);
            }
            
            public System.IAsyncResult BeginRestoreWidgetInstance(int widgetInstanceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = widgetInstanceId;
                System.IAsyncResult _result = base.BeginInvoke("RestoreWidgetInstance", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRestoreWidgetInstance(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RestoreWidgetInstance", _args, result);
            }
            
            public System.IAsyncResult BeginSaveWidgetState(int widgetInstanceId, string state, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = widgetInstanceId;
                _args[1] = state;
                System.IAsyncResult _result = base.BeginInvoke("SaveWidgetState", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveWidgetState(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveWidgetState", _args, result);
            }
        }
    }
}
