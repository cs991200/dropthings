//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40818.0
// 
namespace Dropthings.DiggSilverlight.DropthingsProxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dropthings.omaralzabir.com/rest", ConfigurationName="DropthingsProxy.ProxyServiceRest")]
    public interface ProxyServiceRest {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dropthings.omaralzabir.com/ProxyService/GetUrl", ReplyAction="http://dropthings.omaralzabir.com/ProxyService/GetUrlResponse")]
        System.IAsyncResult BeginGetUrl(Dropthings.DiggSilverlight.DropthingsProxy.GetUrlRequest request, System.AsyncCallback callback, object asyncState);
        
        Dropthings.DiggSilverlight.DropthingsProxy.GetUrlResponse EndGetUrl(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUrl", WrapperNamespace="http://dropthings.omaralzabir.com", IsWrapped=true)]
    public partial class GetUrlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dropthings.omaralzabir.com", Order=0)]
        public string url;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dropthings.omaralzabir.com", Order=1)]
        public int cacheDuration;
        
        public GetUrlRequest() {
        }
        
        public GetUrlRequest(string url, int cacheDuration) {
            this.url = url;
            this.cacheDuration = cacheDuration;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUrlResponse", WrapperNamespace="http://dropthings.omaralzabir.com", IsWrapped=true)]
    public partial class GetUrlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dropthings.omaralzabir.com", Order=0)]
        public byte[] GetUrlResult;
        
        public GetUrlResponse() {
        }
        
        public GetUrlResponse(byte[] GetUrlResult) {
            this.GetUrlResult = GetUrlResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ProxyServiceRestChannel : Dropthings.DiggSilverlight.DropthingsProxy.ProxyServiceRest, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ProxyServiceRestClient : System.ServiceModel.ClientBase<Dropthings.DiggSilverlight.DropthingsProxy.ProxyServiceRest>, Dropthings.DiggSilverlight.DropthingsProxy.ProxyServiceRest {
        
        private BeginOperationDelegate onBeginGetUrlDelegate;
        
        private EndOperationDelegate onEndGetUrlDelegate;
        
        private System.Threading.SendOrPostCallback onGetUrlCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ProxyServiceRestClient() {
        }
        
        public ProxyServiceRestClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProxyServiceRestClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProxyServiceRestClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProxyServiceRestClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetUrlCompletedEventArgs> GetUrlCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthings.DiggSilverlight.DropthingsProxy.ProxyServiceRest.BeginGetUrl(Dropthings.DiggSilverlight.DropthingsProxy.GetUrlRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUrl(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetUrl(string url, int cacheDuration, System.AsyncCallback callback, object asyncState) {
            Dropthings.DiggSilverlight.DropthingsProxy.GetUrlRequest inValue = new Dropthings.DiggSilverlight.DropthingsProxy.GetUrlRequest();
            inValue.url = url;
            inValue.cacheDuration = cacheDuration;
            return ((Dropthings.DiggSilverlight.DropthingsProxy.ProxyServiceRest)(this)).BeginGetUrl(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Dropthings.DiggSilverlight.DropthingsProxy.GetUrlResponse Dropthings.DiggSilverlight.DropthingsProxy.ProxyServiceRest.EndGetUrl(System.IAsyncResult result) {
            return base.Channel.EndGetUrl(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private byte[] EndGetUrl(System.IAsyncResult result) {
            Dropthings.DiggSilverlight.DropthingsProxy.GetUrlResponse retVal = ((Dropthings.DiggSilverlight.DropthingsProxy.ProxyServiceRest)(this)).EndGetUrl(result);
            return retVal.GetUrlResult;
        }
        
        private System.IAsyncResult OnBeginGetUrl(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string url = ((string)(inValues[0]));
            int cacheDuration = ((int)(inValues[1]));
            return this.BeginGetUrl(url, cacheDuration, callback, asyncState);
        }
        
        private object[] OnEndGetUrl(System.IAsyncResult result) {
            byte[] retVal = this.EndGetUrl(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUrlCompleted(object state) {
            if ((this.GetUrlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUrlCompleted(this, new GetUrlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUrlAsync(string url, int cacheDuration) {
            this.GetUrlAsync(url, cacheDuration, null);
        }
        
        public void GetUrlAsync(string url, int cacheDuration, object userState) {
            if ((this.onBeginGetUrlDelegate == null)) {
                this.onBeginGetUrlDelegate = new BeginOperationDelegate(this.OnBeginGetUrl);
            }
            if ((this.onEndGetUrlDelegate == null)) {
                this.onEndGetUrlDelegate = new EndOperationDelegate(this.OnEndGetUrl);
            }
            if ((this.onGetUrlCompletedDelegate == null)) {
                this.onGetUrlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUrlCompleted);
            }
            base.InvokeAsync(this.onBeginGetUrlDelegate, new object[] {
                        url,
                        cacheDuration}, this.onEndGetUrlDelegate, this.onGetUrlCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Dropthings.DiggSilverlight.DropthingsProxy.ProxyServiceRest CreateChannel() {
            return new ProxyServiceRestClientChannel(this);
        }
        
        private class ProxyServiceRestClientChannel : ChannelBase<Dropthings.DiggSilverlight.DropthingsProxy.ProxyServiceRest>, Dropthings.DiggSilverlight.DropthingsProxy.ProxyServiceRest {
            
            public ProxyServiceRestClientChannel(System.ServiceModel.ClientBase<Dropthings.DiggSilverlight.DropthingsProxy.ProxyServiceRest> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetUrl(Dropthings.DiggSilverlight.DropthingsProxy.GetUrlRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetUrl", _args, callback, asyncState);
                return _result;
            }
            
            public Dropthings.DiggSilverlight.DropthingsProxy.GetUrlResponse EndGetUrl(System.IAsyncResult result) {
                object[] _args = new object[0];
                Dropthings.DiggSilverlight.DropthingsProxy.GetUrlResponse _result = ((Dropthings.DiggSilverlight.DropthingsProxy.GetUrlResponse)(base.EndInvoke("GetUrl", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dropthings.omaralzabir.com", ConfigurationName="DropthingsProxy.ProxyService")]
    public interface ProxyService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dropthings.omaralzabir.com/ProxyService/GetUrl", ReplyAction="http://dropthings.omaralzabir.com/ProxyService/GetUrlResponse")]
        System.IAsyncResult BeginGetUrl(string url, int cacheDuration, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetUrl(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ProxyServiceChannel : Dropthings.DiggSilverlight.DropthingsProxy.ProxyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetUrlCompletedEventArgs1 : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUrlCompletedEventArgs1(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ProxyServiceClient : System.ServiceModel.ClientBase<Dropthings.DiggSilverlight.DropthingsProxy.ProxyService>, Dropthings.DiggSilverlight.DropthingsProxy.ProxyService {
        
        private BeginOperationDelegate onBeginGetUrlDelegate;
        
        private EndOperationDelegate onEndGetUrlDelegate;
        
        private System.Threading.SendOrPostCallback onGetUrlCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ProxyServiceClient() {
        }
        
        public ProxyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProxyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProxyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProxyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetUrlCompletedEventArgs1> GetUrlCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dropthings.DiggSilverlight.DropthingsProxy.ProxyService.BeginGetUrl(string url, int cacheDuration, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUrl(url, cacheDuration, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] Dropthings.DiggSilverlight.DropthingsProxy.ProxyService.EndGetUrl(System.IAsyncResult result) {
            return base.Channel.EndGetUrl(result);
        }
        
        private System.IAsyncResult OnBeginGetUrl(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string url = ((string)(inValues[0]));
            int cacheDuration = ((int)(inValues[1]));
            return ((Dropthings.DiggSilverlight.DropthingsProxy.ProxyService)(this)).BeginGetUrl(url, cacheDuration, callback, asyncState);
        }
        
        private object[] OnEndGetUrl(System.IAsyncResult result) {
            byte[] retVal = ((Dropthings.DiggSilverlight.DropthingsProxy.ProxyService)(this)).EndGetUrl(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUrlCompleted(object state) {
            if ((this.GetUrlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUrlCompleted(this, new GetUrlCompletedEventArgs1(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUrlAsync(string url, int cacheDuration) {
            this.GetUrlAsync(url, cacheDuration, null);
        }
        
        public void GetUrlAsync(string url, int cacheDuration, object userState) {
            if ((this.onBeginGetUrlDelegate == null)) {
                this.onBeginGetUrlDelegate = new BeginOperationDelegate(this.OnBeginGetUrl);
            }
            if ((this.onEndGetUrlDelegate == null)) {
                this.onEndGetUrlDelegate = new EndOperationDelegate(this.OnEndGetUrl);
            }
            if ((this.onGetUrlCompletedDelegate == null)) {
                this.onGetUrlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUrlCompleted);
            }
            base.InvokeAsync(this.onBeginGetUrlDelegate, new object[] {
                        url,
                        cacheDuration}, this.onEndGetUrlDelegate, this.onGetUrlCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Dropthings.DiggSilverlight.DropthingsProxy.ProxyService CreateChannel() {
            return new ProxyServiceClientChannel(this);
        }
        
        private class ProxyServiceClientChannel : ChannelBase<Dropthings.DiggSilverlight.DropthingsProxy.ProxyService>, Dropthings.DiggSilverlight.DropthingsProxy.ProxyService {
            
            public ProxyServiceClientChannel(System.ServiceModel.ClientBase<Dropthings.DiggSilverlight.DropthingsProxy.ProxyService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetUrl(string url, int cacheDuration, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = url;
                _args[1] = cacheDuration;
                System.IAsyncResult _result = base.BeginInvoke("GetUrl", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetUrl(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetUrl", _args, result)));
                return _result;
            }
        }
    }
}
